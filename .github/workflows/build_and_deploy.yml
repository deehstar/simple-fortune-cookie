name: Build Docker and Publish

on:
  push:
    branches:
      - main


env:
  GIT_COMMIT:  ${{ github.sha }}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  Build_and_publish_frontend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend service
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/frontend:latest

  Build_and_publish_backend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push backend service
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/backend:latest


  Docker_compose_pull_and_up:
    runs-on: ubuntu-latest
    needs: [Build_and_publish_frontend, Build_and_publish_backend]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Deploy with Docker Compose
        run: |
          docker compose pull
          GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }} docker compose up -d

  Deploy:
      runs-on: ubuntu-latest
      needs: [Build_and_publish_frontend, Build_and_publish_backend]
      steps:
       - name: Set up kubeconfig
         run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
       - name: Deploy to kubernetes
         run: kubectl --kubeconfig kubeconfig apply -f *.yaml
